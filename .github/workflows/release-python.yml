name: Build&Release Python

on:
  push:
    branches:
      - main
    tags:
      - "*.*.*"
  pull_request:
    paths:
      - "citiespy/**"
      - "src/**"
      - ".github/workflows/test-python.yml"
      - ".github/workflows/release-python.yml"
  release:
    types:
      - published

defaults:
  run:
    working-directory: citiespy

jobs:
  linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Cache
        uses: Swatinem/rust-cache@v2
      - uses: messense/maturin-action@v1
        with:
          manylinux: auto
          command: build
          args: --release -o dist --find-interpreter
          working-directory: citiespy
      - name: Upload wheels
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: citiespy/dist

  macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
      - name: Cache
        uses: Swatinem/rust-cache@v2
      - uses: messense/maturin-action@v1
        with:
          command: build
          args: --release -o dist --universal2 --find-interpreter
          working-directory: citiespy
      - name: Upload wheels
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: citiespy/dist

  windows:
     runs-on: windows-latest
     steps:
       - uses: actions/checkout@v3
       - name: Cache
         uses: Swatinem/rust-cache@v2
       - uses: messense/maturin-action@v1
         with:
           command: build
           args: --release -o dist --find-interpreter
           working-directory: citiespy
       - name: Upload wheels
         uses: actions/upload-artifact@v3
         with:
           name: wheels
           path: citiespy/dist

  release:
    name: Release
    runs-on: ubuntu-latest
    if: "startsWith(github.ref, 'refs/tags/')"
    needs: [macos, linux, windows]
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: wheels
      - name: Publish to PyPI
        uses: messense/maturin-action@v1
        env:
          MATURIN_PYPI_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
        with:
          command: upload
          args: --skip-existing *
