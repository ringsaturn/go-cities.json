name: Build&Release Python

on:
  push:
    branches:
      - main
    tags:
      - "*.*.*"
  pull_request:
    paths:
      - "citiespy/**"
      - "src/**"
      - ".github/workflows/test-python.yml"
      - ".github/workflows/release-python.yml"
  release:
    types:
      - published

env:
  # https://blog.rust-lang.org/2022/06/22/sparse-registry-testing.html
  CARGO_UNSTABLE_SPARSE_REGISTRY: false
  # https://doc.rust-lang.org/beta/cargo/reference/config.html#registriescrates-ioprotocol
  CARGO_REGISTRIES_CRATES_IO_PROTOCOL: git

defaults:
  run:
    working-directory: citiespy

jobs:
  linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: messense/maturin-action@v1
        with:
          manylinux: auto
          command: build
          args: --release -o dist --find-interpreter
          working-directory: citiespy
      - name: Upload wheels
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: citiespy/dist

  macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
      - uses: messense/maturin-action@v1
        with:
          command: build
          args: --release -o dist --target universal2-apple-darwin --find-interpreter
          working-directory: citiespy
      - name: Upload wheels
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: citiespy/dist

  windows:
     runs-on: windows-latest
     steps:
       - uses: actions/checkout@v3
       - uses: messense/maturin-action@v1
         with:
           command: build
           args: --release -o dist --find-interpreter
           working-directory: citiespy
       - name: Upload wheels
         uses: actions/upload-artifact@v3
         with:
           name: wheels
           path: citiespy/dist

  release:
    name: Release
    runs-on: ubuntu-latest
    if: github.event_name == 'release' && github.event.action == 'published'
    needs: [macos, linux, windows]
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: wheels
      - name: Publish to PyPI
        uses: messense/maturin-action@v1
        env:
          MATURIN_PYPI_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
        with:
          command: upload
          args: --skip-existing *
